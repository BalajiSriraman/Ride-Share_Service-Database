Relational Model in DBMS
Relational model can represent as a table with columns and rows. Each row is known as a tuple. Each table of the column has a name or attribute.

Domain: It contains a set of atomic values that an attribute can take.

Attribute: It contains the name of a column in a particular table. Each attribute Ai must have a domain, dom(Ai)

Relational instance: In the relational database system, the relational instance is represented by a finite set of tuples. Relation instances do not have duplicate tuples.


Relational schema: A relational schema contains the name of the relation and name of all columns or attributes.

Relational key: In the relational key, each row has one or more attributes. It can identify the row in the relation uniquely.

Example: STUDENT Relation

NAME	ROLL_NO	PHONE_NO	ADDRESS	AGE
Ram	14795	7305758992	Noida	24
Shyam	12839	9026288936	Delhi	35
Laxman	33289	8583287182	Gurugram	20
Mahesh	27857	7086819134	Ghaziabad	27
Ganesh	17282	9028 9i3988	Delhi	40
In the given table, NAME, ROLL_NO, PHONE_NO, ADDRESS, and AGE are the attributes.
The instance of schema STUDENT has 5 tuples.
t3 = <Laxman, 33289, 8583287182, Gurugram, 20>
Properties of Relations
Name of the relation is distinct from all other relations.
Each relation cell contains exactly one atomic (single) value
Each attribute contains a distinct name
Attribute domain has no significance
tuple has no duplicate value
Order of tuple can have a different sequence


Relational Model Concepts
As discussed earlier, a relational database is based on the relational model. This database consists of various components based on the relational model. These include:

Relation : Two-dimensional table used to store a collection of data elements.
Tuple : Row of the relation, depicting a real-world entity.
Attribute/Field : Column of the relation, depicting properties that define the relation.
Attribute Domain : Set of pre-defined atomic values that an attribute can take i.e., it describes the legal values that an attribute can take.
Degree : It is the total number of attributes present in the relation.
Cardinality : It specifies the number of entities involved in the relation i.e., it is the total number of rows present in the relation. Read more about Cardinality in DBMS.
Relational Schema : It is the logical blueprint of the relation i.e., it describes the design and the structure of the relation. It contains the table name, its attributes, and their types:
TABLE_NAME(ATTRIBUTE_1 TYPE_1, ATTRIBUTE_2 TYPE_2, ...)
For our Student relation example, the relational schema will be:

STUDENT(ROLL_NUMBER INTEGER, NAME VARCHAR(20), CGPA FLOAT)
Relational Instance : It is the collection of records present in the relation at a given time.
Relation Key : It is an attribute or a group of attributes that can be used to uniquely identify an entity in a table or to determine the relationship between two tables. Relation keys can be of 6 different types:
Candidate Key
Super Key
Composite Key
Primary Key
Alternate Key
Foreign Key
Highlights:

A Relation is a collection of rows (tuples) and columns (attributes).
In a relation, the tuples depicts real-world entity, while the attributes are the properties that define the relation.
Structure of the relation is described by the relational schema.
Relational keys are used to uniquely identify a row in a table or to determine the relationship between two tables.
Constraints in Relational Model
Relational models make use of some rules to ensure the accuracy and accessibility of the data. These rules or constraints are known as Relational Integrity Constraints. These constraints are checked before performing any operation like insertion, deletion, or updation on the data present in a relational database. These constraints include:

Domain Constraint : It specifies that every attribute is bound to have a value that lies inside a specific range of values. It is implemented with the help of the Attribute Domain concept.
Key Constraint : It states that every relation must contain an attribute or a set of attributes (Primary Key) that can uniquely identify a tuple in that relation. This key can never be NULL or contain the same value for two different tuples.
Referential Integrity Constraint : It is defined between two inter-related tables. It states that if a given relation refers to a key attribute of a different or same table, then that key must exist in the given relation.
Highlights:

To ensure data accuracy and accessibility, Relational Integrity Constraints are implemented.
It includes domain, key, and referential integrity constraints.


Relational Model Concepts in DBMS
Attribute: Each column in a Table. Attributes are the properties which define a relation. e.g., Student_Rollno, NAME,etc.
Tables – In the Relational model the, relations are saved in the table format. It is stored along with its entities. A table has two properties rows and columns. Rows represent records and columns represent attributes.
Tuple – It is nothing but a single row of a table, which contains a single record.
Relation Schema: A relation schema represents the name of the relation with its attributes.
Degree: The total number of attributes which in the relation is called the degree of the relation.
Cardinality: Total number of rows present in the Table.
Column: The column represents the set of values for a specific attribute.
Relation instance – Relation instance is a finite set of tuples in the RDBMS system. Relation instances never have duplicate tuples.
Relation key – Every row has one, two or multiple attributes, which is called relation key.
Attribute domain – Every attribute has some pre-defined value and scope which is known as attribute domain


Advantages of Relational Database Model
Simplicity: A Relational data model in DBMS is simpler than the hierarchical and network model.
Structural Independence: The relational database is only concerned with data and not with a structure. This can improve the performance of the model.
Easy to use: The Relational model in DBMS is easy as tables consisting of rows and columns are quite natural and simple to understand
Query capability: It makes possible for a high-level query language like SQL to avoid complex database navigation.
Data independence: The Structure of Relational database can be changed without having to change any application.
Scalable: Regarding a number of records, or rows, and the number of fields, a database should be enlarged to enhance its usability.
Disadvantages of Relational Model
Few relational databases have limits on field lengths which can’t be exceeded.
Relational databases can sometimes become complex as the amount of data grows, and the relations between pieces of data become more complicated.
Complex relational database systems may lead to isolated databases where the information cannot be shared from one system to another.
Summary
The Relational database modelling represents the database as a collection of relations (tables)
Attribute, Tables, Tuple, Relation Schema, Degree, Cardinality, Column, Relation instance, are some important components of Relational Model
Relational Integrity constraints are referred to conditions which must be present for a valid Relation approach in DBMS
Domain constraints can be violated if an attribute value is not appearing in the corresponding domain or it is not of the appropriate data type
Insert, Select, Modify and Delete are the operations performed in Relational Model constraints
The relational database is only concerned with data and not with a structure which can improve the performance of the model
Advantages of Relational model in DBMS are simplicity, structural independence, ease of use, query capability, data independence, scalability, etc.
Few relational databases have limits on field lengths which can’t be exceeded.




